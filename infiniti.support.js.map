{"version":3,"sources":["infiniti.support.js"],"names":["clazof","require","depher","diatom","doubt","falze","falzy","harden","moment","optfor","raze","truly","stringe","U200b","COMPACT_FORMAT","DEFAULT_SEPARATOR","ISO8601_FORMAT","NUMERIC_PATTERN","SIMPLE_DATE_FORMAT","TRUE_DATE_PATTERN","Infiniti","now","compact","prototype","toString","trueDate","valueOf","initialize","date","ARRAY","length","offset","utc","minute","second","millisecond","utcOffset","persist","test","parse","isValid","toDate","Error","arguments","error","stack","Date","parseInt","polarity","Math","abs","replace","getUTCFullYear","getUTCMonth","slice","getUTCDate","getUTCHours","join","separate","year","month","hour","relativeDate","format","realDate","getDate","printDate","separator","complete","parameter","STRING","BOOLEAN","map","onEachToken","token","module","exports"],"mappings":"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","file":"infiniti.support.js","sourcesContent":["\"use strict\";\r\n\r\n/*;\r\n\t@module-license:\r\n\t\tThe MIT License (MIT)\r\n\t\t@mit-license\r\n\r\n\t\tCopyright (@c) 2017 Richeve Siodina Bebedor\r\n\t\t@email: richeve.bebedor@gmail.com\r\n\r\n\t\tPermission is hereby granted, free of charge, to any person obtaining a copy\r\n\t\tof this software and associated documentation files (the \"Software\"), to deal\r\n\t\tin the Software without restriction, including without limitation the rights\r\n\t\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n\t\tcopies of the Software, and to permit persons to whom the Software is\r\n\t\tfurnished to do so, subject to the following conditions:\r\n\r\n\t\tThe above copyright notice and this permission notice shall be included in all\r\n\t\tcopies or substantial portions of the Software.\r\n\r\n\t\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n\t\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n\t\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n\t\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n\t\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n\t\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n\t\tSOFTWARE.\r\n\t@end-module-license\r\n\r\n\t@module-configuration:\r\n\t\t{\r\n\t\t\t\"package\": \"infiniti\",\r\n\t\t\t\"path\": \"infiniti/infiniti.js\",\r\n\t\t\t\"file\": \"infiniti.js\",\r\n\t\t\t\"module\": \"infiniti\",\r\n\t\t\t\"author\": \"Richeve S. Bebedor\",\r\n\t\t\t\"eMail\": \"richeve.bebedor@gmail.com\",\r\n\t\t\t\"contributors\": [\r\n\t\t\t\t\"John Lenon Maghanoy <johnlenonmaghanoy@gmail.com>\",\r\n\t\t\t\t\"Vinse Vinalon <vinsevinalon@gmail.com>\"\r\n\t\t\t],\r\n\t\t\t\"repository\": \"https://github.com:volkovasystems/infiniti.git\",\r\n\t\t\t\"test\": \"infiniti-test.js\",\r\n\t\t\t\"global\": true,\r\n\t\t\t\"class\": true,\r\n\t\t}\r\n\t@end-module-configuration\r\n\r\n\t@module-documentation:\r\n\t\tTake note that the time part is always in zero.\r\n\t@end-module-documentation\r\n\r\n\t@include:\r\n\t\t{\r\n\t\t\t\"clazof\": \"clazof\",\r\n\t\t\t\"depher\": \"depher\",\r\n\t\t\t\"diatom\": \"diatom\",\r\n\t\t\t\"doubt\": \"doubt\",\r\n\t\t\t\"falze\": \"falze\",\r\n\t\t\t\"falzy\": \"falzy\",\r\n\t\t\t\"harden\": \"harden\",\r\n\t\t\t\"moment\": \"moment\",\r\n\t\t\t\"optfor\": \"optfor\",\r\n\t\t\t\"raze\": \"raze\",\r\n\t\t\t\"stringe\": \"stringe\",\r\n\t\t\t\"truly\": \"truly\",\r\n\t\t\t\"U200b\": \"u200b\"\r\n\t\t}\r\n\t@end-include\r\n*/\r\n\r\nconst clazof = require( \"clazof\" );\r\nconst depher = require( \"depher\" );\r\nconst diatom = require( \"diatom\" );\r\nconst doubt = require( \"doubt\" );\r\nconst falze = require( \"falze\" );\r\nconst falzy = require( \"falzy\" );\r\nconst harden = require( \"harden\" );\r\nconst moment = require( \"moment\" );\r\nconst optfor = require( \"optfor\" );\r\nconst raze = require( \"raze\" );\r\nconst truly = require( \"truly\" );\r\nconst stringe = require( \"stringe\" );\r\nconst U200b = require( \"u200b\" );\r\n\r\nconst COMPACT_FORMAT = \"YYYYMMDDHH\";\r\nconst DEFAULT_SEPARATOR = \" | \";\r\nconst ISO8601_FORMAT = \"YYYY-MM-DDTHH:00:00\";\r\nconst NUMERIC_PATTERN = /\\d+/;\r\nconst SIMPLE_DATE_FORMAT = \"MMMM DD, YYYY\";\r\nconst TRUE_DATE_PATTERN = /^\\-[\\d\\u200b]{26}|^[\\d\\u200b]{27}$/;\r\n\r\nconst Infiniti = diatom( \"Infiniti\" );\r\n\r\nharden( \"now\", function now( ){\r\n\treturn Infiniti( ).compact( );\r\n}, Infiniti );\r\n\r\nInfiniti.prototype.toString = function toString( ){\r\n\treturn this.trueDate;\r\n};\r\n\r\nInfiniti.prototype.valueOf = function valueOf( ){\r\n\treturn this.trueDate;\r\n};\r\n\r\nInfiniti.prototype.initialize = function initialize( date ){\r\n\t/*;\r\n\t\t@meta-configuration:\r\n\t\t\t{\r\n\t\t\t\t\"date:required\": [\r\n\t\t\t\t\t[ \"number\", \"number\" ],\r\n\t\t\t\t\t\"string\",\r\n\t\t\t\t\tDate\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t@end-meta-configuration\r\n\t*/\r\n\r\n\tif( doubt( date, ARRAY ) &&\r\n\t\ttypeof date[ 0 ] == \"number\" &&\r\n\t\ttypeof date[ 1 ] == \"number\" &&\r\n\t\tstringe( date[ 0 ] ).length == 10 )\r\n\t{\r\n\t\tthis.offset = date[ 1 ];\r\n\r\n\t\tthis.date = moment.utc( date[ 0 ], COMPACT_FORMAT )\r\n\t\t\t.minute( 0 )\r\n\t\t\t.second( 0 )\r\n\t\t\t.millisecond( 0 )\r\n\t\t\t.utcOffset( this.offset );\r\n\r\n\t\tthis.persist( );\r\n\r\n\t}else if( typeof date == \"string\" && date.length == 27 && TRUE_DATE_PATTERN.test( date ) ){\r\n\t\tthis.date = date;\r\n\r\n\t\tthis.parse( );\r\n\r\n\t}else if( truly( date ) && typeof date == \"string\" ){\r\n\t\ttry{\r\n\t\t\tdate = moment( date )\r\n\t\t\t\t.minute( 0 )\r\n\t\t\t\t.second( 0 )\r\n\t\t\t\t.millisecond( 0 );\r\n\r\n\t\t\tif( date.isValid( ) ){\r\n\t\t\t\tthis.initialize( date.toDate( ) );\r\n\r\n\t\t\t}else{\r\n\t\t\t\tthrow new Error( `invalid date format, ${ arguments[ 0 ] }` );\r\n\t\t\t}\r\n\r\n\t\t}catch( error ){\r\n\t\t\tthrow new Error( `error encountered while parsing date, ${ error.stack }` );\r\n\t\t}\r\n\r\n\t}else if( clazof( date, Date ) ){\r\n\t\tthis.date = moment( date )\r\n\t\t\t.minute( 0 )\r\n\t\t\t.second( 0 )\r\n\t\t\t.millisecond( 0 );\r\n\r\n\t\tthis.persist( );\r\n\r\n\t}else{\r\n\t\tthis.date = moment( new Date( ) )\r\n\t\t\t.minute( 0 )\r\n\t\t\t.second( 0 )\r\n\t\t\t.millisecond( 0 );\r\n\r\n\t\tthis.persist( );\r\n\t}\r\n\r\n\treturn this;\r\n};\r\n\r\n/*\r\n\t@method-documentation:\r\n\t\tThis should be persisted on the machine where the timezone is persisted.\r\n\r\n\t\tIt will save the true date in utc format + the machine timezone.\r\n\t@end-method-documentation\r\n*/\r\nInfiniti.prototype.persist = function persist( ){\r\n\tif( truly( this.trueDate ) ){\r\n\t\treturn this.trueDate;\r\n\t}\r\n\r\n\tlet date = this.date.toDate( );\r\n\r\n\tlet offset = this.offset || this.date.utcOffset( );\r\n\ttry{\r\n\t\toffset = parseInt( offset );\r\n\r\n\t}catch( error ){\r\n\t\tthrow new Error( `invalid timezone offset, ${ error.stack }` );\r\n\t}\r\n\r\n\tlet polarity = 0;\r\n\tif( offset != 0 ){\r\n\t\tpolarity = offset / Math.abs( offset );\r\n\t}\r\n\r\n\tlet trueDate = U200b( [\r\n\t\t//: positive / negative offset\r\n\t\tstringe( polarity ).replace( NUMERIC_PATTERN, \"\" ) || \"0\",\r\n\r\n\t\t//: year\r\n\t\tdate.getUTCFullYear( ),\r\n\r\n\t\t//: month\r\n\t\t( \"0\" + ( date.getUTCMonth( ) + 1 ) ).slice( -2 ),\r\n\r\n\t\t//: day\r\n\t\t( \"0\" + ( date.getUTCDate( ) ) ).slice( -2 ),\r\n\r\n\t\t//: hour\r\n\t\t( \"0\" + ( date.getUTCHours( ) ) ).slice( -2 ),\r\n\r\n\t\t//: minute\r\n\t\t\"00\",\r\n\r\n\t\t//: second\r\n\t\t\"00\",\r\n\r\n\t\t//: offset\r\n\t\t( \"000\" + Math.abs( offset ) ).slice( -5 )\r\n\t] ).join( );\r\n\r\n\tthis.trueDate = trueDate;\r\n\r\n\tthis.offset = offset;\r\n\r\n\treturn trueDate;\r\n};\r\n\r\n/*;\r\n\t@method-documentation:\r\n\t\tDecompose true date to a moment object.\r\n\t@end-method-documentation\r\n*/\r\nInfiniti.prototype.parse = function parse( ){\r\n\tlet date = this.date;\r\n\r\n\tif( typeof this.date == \"string\" ){\r\n\t\tdate = U200b( this.date ).separate( );\r\n\r\n\t}else if( truly( this.trueDate ) ){\r\n\t\tdate = U200b( this.trueDate ).separate( );\r\n\r\n\t}else{\r\n\t\tthrow new Error( \"date not specified\" );\r\n\t}\r\n\r\n\ttry{\r\n\t\tlet polarity = parseInt( date[ 0 ] + 1 );\r\n\r\n\t\tthis.offset = polarity * parseInt( date[ 7 ] );\r\n\r\n\t\tdate = moment.utc( )\r\n\t\t\t.year( parseInt( date[ 1 ] ) )\r\n\t\t\t.month( parseInt( date[ 2 ] ) - 1 )\r\n\t\t\t.date( parseInt( date[ 3 ] ) )\r\n\t\t\t.hour( parseInt( date[ 4 ] ) )\r\n\t\t\t.minute( 0 )\r\n\t\t\t.second( 0 )\r\n\t\t\t.millisecond( 0 );\r\n\r\n\t}catch( error ){\r\n\t\tthrow new Error( `error parsing true date, ${ error.stack }` );\r\n\t}\r\n\r\n\t//: This will set the timezone of the Date object to the machine timezone.\r\n\tthis.date = date;\r\n\r\n\tthis.persist( );\r\n\r\n\treturn this;\r\n};\r\n\r\n/*;\r\n\t@method-documentation:\r\n\t\tRelative date is the date applied with UTC offset.\r\n\r\n\t\tThis will return the date in ISO8601 format.\r\n\r\n\t\t`YYYY-MM-DDTHH:00:00`\r\n\r\n\t\tDo not use this to reference true date.\r\n\t@end-method-documentation\r\n*/\r\nInfiniti.prototype.relativeDate = function relativeDate( ){\r\n\tif( falze( this.date ) ){\r\n\t\tthrow new Error( \"internal date empty\" );\r\n\t}\r\n\r\n\tif( falzy( this.offset ) ){\r\n\t\tthrow new Error( \"internal timezone offset empty\" );\r\n\t}\r\n\r\n\treturn this.date.utc( ).utcOffset( this.offset ).format( ISO8601_FORMAT );\r\n};\r\n\r\n/*;\r\n\t@method-documentation:\r\n\t\tReal date is the date with no UTC offset applied.\r\n\r\n\t\tThis will return the date in ISO8601\r\n\r\n\t\t`YYYY-MM-DDTHH:00:00`\r\n\t@end-method-documentation\r\n*/\r\nInfiniti.prototype.realDate = function realDate( ){\r\n\tif( falze( this.date ) ){\r\n\t\tthrow new Error( \"internal date empty\" );\r\n\t}\r\n\r\n\treturn this.date.utc( ).format( ISO8601_FORMAT );\r\n};\r\n\r\n/*;\r\n\t@method-documentation:\r\n\t\tReturns a simple human readable representation of date.\r\n\r\n\t\tDate will be relative.\r\n\t@end-method-documentation\r\n*/\r\nInfiniti.prototype.getDate = function getDate( ){\r\n\tif( falze( this.date ) ){\r\n\t\tthrow new Error( \"internal date empty\" );\r\n\t}\r\n\r\n\tif( falzy( this.offset ) ){\r\n\t\tthrow new Error( \"internal timezone offset empty\" );\r\n\t}\r\n\r\n\treturn this.date.utc( ).utcOffset( this.offset ).format( SIMPLE_DATE_FORMAT );\r\n};\r\n\r\n/*;\r\n\t@method-documentation:\r\n\t\tReturns a simple human readable representation of date.\r\n\r\n\t\tDate will be relative.\r\n\r\n\t\tSetting complete will append true date format.\r\n\t@end-method-documentation\r\n*/\r\nInfiniti.prototype.printDate = function printDate( separator, complete ){\r\n\t/*;\r\n\t\t@meta-configuration:\r\n\t\t\t{\r\n\t\t\t\t\"separator\": \"string\",\r\n\t\t\t\t\"complete\": \"boolean\"\r\n\t\t\t}\r\n\t\t@end-meta-configuration\r\n\t*/\r\n\r\n\tlet parameter = raze( arguments );\r\n\r\n\tseparator = optfor( parameter, STRING );\r\n\r\n\tseparator = separator || DEFAULT_SEPARATOR;\r\n\tif( typeof separator != \"string\" ){\r\n\t\tseparator = DEFAULT_SEPARATOR;\r\n\t}\r\n\r\n\tcomplete = depher( parameter, BOOLEAN, false );\r\n\r\n\tif( complete ){\r\n\t\treturn [ this.getDate( ), this.trueDate ].join( separator );\r\n\r\n\t}else{\r\n\t\treturn this.getDate( );\r\n\t}\r\n};\r\n\r\n/*;\r\n\t@method-documentation:\r\n\t\tReturns a numerical representation of true date in UTC.\r\n\r\n\t\tTime part is excluded except the hour.\r\n\t@end-method-documentation\r\n*/\r\nInfiniti.prototype.compact = function compact( ){\r\n\treturn [ this.date.utc( ).format( COMPACT_FORMAT ), this.offset ]\r\n\t\t.map( function onEachToken( token ){ return parseInt( stringe( token ) ); } );\r\n};\r\n\r\nmodule.exports = Infiniti;\r\n"]}